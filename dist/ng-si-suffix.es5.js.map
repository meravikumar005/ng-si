{"version":3,"file":"ng-si-suffix.es5.js","sources":["ts/src/app/ng-si-suffix.ts","ts/src/app/pipe/si-suffix.module.ts","ts/src/app/pipe/si-suffix.pipe.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {SiSuffixModule} from './public_api';\n\nexport {SiSuffix as Éµa} from './pipe/si-suffix.pipe';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SiSuffix } from './si-suffix.pipe';\nexport class SiSuffixModule {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations:[\n    SiSuffix\n  ],\n  imports:[\n\n  ],\n  providers:[\n\n  ],\n  exports:[\n    SiSuffix\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SiSuffixModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSiSuffixModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSiSuffixModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe , PipeTransform} from '@angular/core';\ndeclare let window:any;\nexport class SiSuffix implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} decimal\n * @return {?}\n */\ntransform(value:number, decimal:number ) {\n    let /** @type {?} */ suffixes = [ 'k', 'M', 'G', 'T', 'P', 'E'];\n    if(value === null || value === undefined) {\n      return null;\n    } else if (window.isNaN(value)) {\n      return null;\n    } else if(value < 1000) {\n      return value;\n    } else {\n      let /** @type {?} */ exp = Math.floor(Math.log(value) / Math.log(1000));\n      return (value / Math.pow(1000,exp)).toFixed(2) + suffixes[exp -1];\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name:'siSuffix'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SiSuffix_tsickle_Closure_declarations() {\n/** @type {?} */\nSiSuffix.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSiSuffix.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":";AEEA;IAAA;;;;;;;IAMA,4BAHG,GAGH,UAHG,KAAA,EAAA,OAAA;QAIC,IAAJ,gBAAA,CAHQ,QAAA,GAAW,CAAE,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAI,CAAC;QAI/C,EAAJ,CAAA,CAAO,KAHC,KAAS,IAAA,IAAQ,KAAA,KAAU,SAAA,CAGnC,CAH8C,CAG9C;YACM,MAAN,CAHa,IAAA,CAAK;QAIlB,CAAK;QAHL,IAAA,CAAW,EAAX,CAAA,CAAW,MAAK,CAAM,KAAC,CAAK,KAAC,CAAK,CAAlC,CAAoC,CAApC;YAIM,MAAN,CAHa,IAAA,CAAK;QAIlB,CAAK;QAHL,IAAA,CAAW,EAAX,CAAA,CAAW,KAAI,GAAO,IAAA,CAAtB,CAA4B,CAA5B;YAIM,MAAN,CAHa,KAAA,CAAM;QAInB,CAAK;QAHL,IAAA,CAAW,CAAX;YAIM,IAAN,gBAAA,CAHU,GAAA,GAAM,IAAA,CAAK,KAAC,CAAK,IAAC,CAAI,GAAC,CAAG,KAAC,CAAK,GAAG,IAAA,CAAK,GAAC,CAAG,IAAC,CAAI,CAAC,CAAC;YAIvD,MAAN,CAHa,CAAA,KAAE,GAAO,IAAA,CAAK,GAAC,CAAG,IAAC,EAAI,GAAC,CAAG,CAGxC,CAH0C,OAAC,CAAO,CAAC,CAAC,GAAG,QAAA,CAAS,GAAC,GAAG,CAAE,CAAC,CAAC;QAIxE,CAAK;IACL,CAAG;;CAlBH;AAgBO,QAAP,CAAA,UAAO,GAAoC;IAI3C,EAHE,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,CAAA,EAAE,IAAC,EAAI,UAAC,EAAU,EAAC,EAAG;CAIzC,CAHC;;;;AAED,QAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAMA,EANA,CAMA,CAAC;ADxBF;IAAA;;;CAAA;AAKO,cAAP,CAAA,UAAO,GAAoC;IAF3C,EAGE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBAFtB,YAAY,EAGC;oBAFX,QAAQ;iBACT;gBACD,OAAO,EAGC,EADP;gBACD,SAAS,EAGC,EADT;gBACD,OAAO,EAGC;oBAFN,QAAQ;iBACT;aACF,EAGC,EAAG;CAFJ,CAGC;;;;AAED,cAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAAA,EAAA,CAAA,CAAC;AD1BF;;GAEG;"}
