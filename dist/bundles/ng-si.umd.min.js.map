{"version":3,"file":"ng-si.umd.min.js","sources":["~/ng-si/src/app/pipe/ng-si.pipe.ts","~/ng-si/src/app/pipe/ng-si.module.ts"],"sourcesContent":["import { Pipe , PipeTransform} from '@angular/core';\ndeclare let window:any;\nexport class NgSiPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} decimal\n * @return {?}\n */\ntransform(value:number, decimal:number ) {\n    let /** @type {?} */ suffixes = [ 'k', 'M', 'G', 'T', 'P', 'E'];\n    if(value === null || value === undefined) {\n      return null;\n    } else if (window.isNaN(value)) {\n      return null;\n    } else if(value < 1000) {\n      return value;\n    } else {\n      let /** @type {?} */ exp = Math.floor(Math.log(value) / Math.log(1000));\n      return (value / Math.pow(1000,exp)).toFixed(2) + suffixes[exp -1];\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name:'NgSiPipe'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgSiPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSiPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSiPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgSiPipe } from './ng-si.pipe';\nexport class SiPipeModule {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations:[\n    NgSiPipe\n  ],\n  imports:[\n\n  ],\n  providers:[\n\n  ],\n  exports:[\n    NgSiPipe\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SiPipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSiPipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSiPipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgSiPipe","prototype","transform","value","decimal","undefined","window","isNaN","exp","Math","floor","log","pow","toFixed","decorators","type","Pipe","args","name","ctorParameters","SiPipeModule","NgModule","declarations","imports","providers","exports"],"mappings":"gPAEA,IAAAA,EAAA,WAAA,SAAAA,YAMAA,EAAAC,UAAAC,UAAA,SAHGC,EAAAC,GAKC,GAHa,OAGVD,GAHkBA,IAAUE,UAI7B,OAHO,KACF,GAAAC,OAAWC,MAAMJ,GAItB,OAHO,KACF,GAAAA,EAAW,IAIhB,OAHOA,EAKP,IAHIK,EAAMC,KAAKC,MAAMD,KAAKE,IAAIR,GAASM,KAAKE,IAAI,MAIhD,OAHOR,EAASM,KAAKG,IAAI,IAAKJ,IAAMK,QAAQ,IAT7B,IAAK,IAAK,IAAK,IAAK,IAAK,KASkBL,EAAI,MAbpE,GAgBOR,EAAPc,aACEC,KAAMC,EAAAA,KAAMC,OAAQC,KAAK,eAG1BlB,EAADmB,eAAC,WAAA,UClBD,IAAAC,EAAA,kBAAA,aAAA,GAKOA,EAAPN,aACEC,KAAMM,EAAAA,SAAUJ,OAFhBK,cACEtB,GAEFuB,WAGAC,aAGAC,SACEzB,OAQHoB,EAADD,eAAC,WAAA"}
